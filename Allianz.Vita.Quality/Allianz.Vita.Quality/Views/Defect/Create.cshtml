@model Allianz.Vita.Quality.Models.DefectViewModel
@{
    ViewBag.Title = "Convert Mail to Defect";
}

@using (Html.BeginForm("Save", "Defect", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {

    @Html.AntiForgeryToken()
    
    <h2>New Defect: @Model.Title</h2>
    @Html.Hidden("Title", Model.Title);
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Insert Defect" />
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(m => m.HtmlAreaPath, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.HtmlAreaPath, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.HtmlIteration, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.HtmlIteration, new { @class = "form-control" })
        </div>
    </div>

    @Html.Hidden("SurveySystem", Model.SurveySystem);
    
    <div class="form-group">
        @Html.LabelFor(m => m.DefectID, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.DefectID, new { @class = "form-control" })
        </div>
    </div>

    @Html.Hidden("FoundIn", Model.FoundIn);
   
    <div class="form-group">
        @Html.LabelFor(m => m.Agency, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Agency, new { @class = "form-control" })
        </div>
    </div>

    @Html.Hidden("Environment", Model.Environment);

    <div class="form-group">
        @Html.LabelFor(m => m.DefectType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.DefectType, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Severity, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Severity, new { @class = "form-control" })
        </div>
    </div>

    @Html.Hidden("State", Model.State);

    <div class="form-group">
        @Html.LabelFor(m => m.HtmlDescription, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.HtmlDescription, new { @class = "form-control" })
        </div>
    </div>
    if (Model.Comments.Any()) { 
        <div class="form-group">
            <table class="table">
                <tbody>
                    <tr>
                        <th>
                            @Html.LabelFor(m => m.Comments)
                        </th>

                    </tr>
                    @foreach (var comment in Model.Comments) {
                        <tr>
                            <td>
                                @Html.TextAreaFor(modelItem => comment)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    if(Model.Attachment.Any()) {
        <div class="form-group">
            <table class="table">
                <tbody>
                    <tr>
                        <th>
                            @Html.LabelFor(m => m.Attachment)
                        </th>

                    </tr>
                    @foreach (var attachment in Model.Attachment) {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => attachment.Title)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            </div>
    }

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
