@model Allianz.Vita.Quality.Models.DefectViewModel
@{
    ViewBag.Title = "Convert Mail to Defect";
}

@using (Html.BeginForm("Save", "Defect", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    @Html.AntiForgeryToken()

    @Html.Hidden("IMailItemUniqueId", Model.IMailItemUniqueId);
    <h2>New Defect: @Model.Title</h2>
    @Html.Hidden("Title", Model.Title);

    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <input type="submit" class="btn btn-default" value="Insert Defect" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.AutoAssign, new { @class = "col-md-2 control-label" })
        <div class="col-md-3, checkbox-inline">
            @Html.CheckBoxFor(m => m.AutoAssign, new { @class = "form-control" })
        </div>
    </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AreaPath, new { @class = "col-md-2 control-label" })
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.AreaPath, new SelectList(Model.AreaPathAllowedValues), "", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Iteration, new { @class = "col-md-2 control-label" })
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.Iteration, new SelectList(Model.IterationAllowedValues), "", new { @class = "form-control" })
            </div>
        </div>


        @Html.Hidden("SurveySystem", Model.SurveySystem);

    <div class="form-group">
        @Html.LabelFor(m => m.DefectID, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(m => m.DefectID, new { @class = "form-control" })
        </div>
    </div>

    @Html.Hidden("FoundIn", Model.FoundIn);

    <div class="form-group">
        @Html.LabelFor(m => m.Agency, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(m => m.Agency, new { @class = "form-control" })
        </div>
    </div>

    @Html.Hidden("Environment", Model.Environment);

    <div class="form-group">
        @Html.LabelFor(m => m.DefectType, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.DropDownListFor(m => m.DefectType, new SelectList(Model.DefectTypeAllowedValues), "", new { @class = "form-control" })
        </div>
    </div>

    @Html.Hidden("Severity", Model.Severity);
    @*<div class="form-group">
            @Html.LabelFor(m => m.Severity, new { @class = "col-md-2 control-label" })
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.Severity, new { @class = "form-control" })
            </div>
        </div>*@

    @Html.Hidden("State", Model.State);

    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.EditorFor(m => m.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description)

        </div>
    </div>
    @*<div class="form-group">
            <table class="table">
                <tbody>
                    <tr>
                        <th>
                            @Html.LabelFor(m => m.Comments)
                        </th>

                    </tr>
                    @if (Model.Attachment.Any())
                    {

                        foreach (var comment in Model.Comments)
                        {
                            <tr>
                                <td>
                                    @Html.TextAreaFor(modelItem => comment)
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td>...</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="form-group">
            <table class="table">
                <tbody>
                    <tr>
                        <th>
                            @Html.LabelFor(m => m.Attachment)
                        </th>

                    </tr>
                    @if (Model.Attachment.Any())
                    {

                        foreach (var attachment in Model.Attachment)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => attachment.Title)
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td>...</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>*@
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
